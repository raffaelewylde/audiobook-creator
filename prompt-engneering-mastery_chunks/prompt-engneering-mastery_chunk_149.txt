 could be broken down into several key
components, such as:
Character creation
Plot generation
Scenes/world building
Figure 4-4  shows what the prompt workflow might look like.Figure 4-4. A sequential story creation processSequential Chain
Let’s decompose the task into multiple chains  and recompose them into a
single chain:
character_generation_chain
A chain responsible for creating multiple characters given a
'genre' .
plot_generation_chain
A chain that will create the plot given the 'characters'  and
'genre'  keys.
scene_generation_chain
This chain will generate any missing scenes that were not initially
generated from the plot_generation_chain .
Let’s start by creating three separate ChatPromptTemplate  variables,
one for each chain:
from langchain_core.prompts.chat  import ChatPromptTem
character_generation_prompt  = ChatPromptTemplate .from
    """I want you to brainstorm three to five charact
    genre is {genre}. Each character must have a Name    You must provide a name and biography for each ch
    important!
    ---
    Example response:
    Name: CharWiz, Biography: A wizard who is a maste
    Name: CharWar, Biography: A warrior who is a mast
    ---
    Characters: """
)
plot_generation_prompt  = ChatPromptTemplate .from_temp
    """Given the following characters and the genre, 
    plot for a short story:
    Characters:
    {characters}
    ---
    Genre: {genre}
    ---
    Plot: """
    )
scene_generation_plot_prompt  = ChatPromptTemplate .fro
    """Act as an effective content creator.
    Given multiple characters and a plot, you are res
    generating the various scenes for each act.
    You must decompose the plot into multiple effecti
    ---    Characters:
    {characters}
    ---
    Genre: {genre}
    ---
    Plot: {plot}
    ---
    Example response:
    Scenes:
    Scene 1: Some text here.
    Scene 2: Some text here.
    Scene 3: Some text here.
    ----
    Scenes:
    """
)
Notice that as the prompt templates flow from character to plot