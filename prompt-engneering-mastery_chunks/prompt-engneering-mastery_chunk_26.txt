5
for idx, prompt in enumerate (test_prompts ):
    # prompt number as a letter
    var_name  = chr(ord('A') + idx)
    for i in range(num_tests ):
        # Get a response from the model
        response  = get_response (prompt)
        data = {
            "variant" : var_name ,
            "prompt" : prompt,
            "response" : response
            }
        responses .append(data)
# Convert responses into a dataframe
df = pd.DataFrame (responses )# Save the dataframe as a CSV file
df.to_csv("responses.csv" , index=False)
print(df)
Output:
  variant                                            
  \
0       A  Product description: A pair of shoes that 
1       A  Product description: A pair of shoes that 
2       A  Product description: A pair of shoes that 
3       A  Product description: A pair of shoes that 
4       A  Product description: A pair of shoes that 
5       B  Product description: A home milkshake make
6       B  Product description: A home milkshake make
7       B  Product description: A home milkshake make
8       B  Product description: A home milkshake make
9       B  Product description: A home milkshake make
                                            response
0  1. Adapt-a-Fit Shoes \n2. Omni-Fit Footwear \n...
1  1. OmniFit Shoes\n2. Adapt-a-Sneaks \n3. OneFi...
2  1. Adapt-a-fit\n2. Flexi-fit shoes\n3. Omni-fe...
3  1. Adapt-A-Sole\n2. FitFlex\n3. Omni-FitX\n4. ...
4  1. Omni-Fit Shoes\n2. Adapt-a-Fit Shoes\n3. An...
5  Adapt-a-Fit, Perfect Fit Shoes, OmniShoe, OneS...6       FitAll, OmniFit Shoes, SizeLess, AdaptaShoes
7       AdaptaFit, OmniShoe, PerfectFit, AllSizeFit.
8  FitMaster, AdaptoShoe, OmniFit, AnySize Footwe...
9        Adapt-a-Shoe, PerfectFit, OmniSize, FitForm
Here we’re using the OpenAI API to generate model responses to a set of
prompts and storing the results in a dataframe, which is saved to a CSV  file.
Here’ s how it works:
1. Two prompt variants are defined, and each variant consists of a product
description, seed 