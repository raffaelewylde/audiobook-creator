the visualization will
always be up to date.
Using an API
An API is a part of a website designed to interact with programs. Those
programs use very specific URLs to request certain information. This kind
of request is called an API call . The requested data will be returned in an
easily processed format, such as JSON or CSV . Most apps that use external
data sources, such as apps that integrate with social media sites, rely on API
calls.Git and GitHub
We’ll base our visualization on information from GitHub ( https://github.co
m), a site that allows programmers to collaborate on coding projects. We’ll
use GitHub’ s API to request information about Python projects on the site,
and then generate an interactive visualization of the relative popularity of
these projects using Plotly .
GitHub takes its name from Git, a distributed version control system. Git
helps people manage their work on a project in a way that prevents changes
made by one person from interfering with changes other people are making.
When you implement a new feature in a project, Git tracks the changes you
make to each file. When your new code works, you commit  the changes
you’ve made, and Git records the new state of your project. If you make a
mistake and want to revert your changes, you can easily return to any
previously working state. (T o learn more about version control using Git,
see Appendix D .) Projects on GitHub are stored in repositories , which
contain everything associated with the project: its code, information on its
collaborators, any issues or bug reports, and so on.
When users on GitHub like a project, they can “star” it to show their
support and keep track of projects they might want to use. In this chapter ,
we’ll write a program to automatically download information about the
most-starred Python projects on GitHub, and then we’ll create an
informative visualization of these projects.Requesting Data Using an API Call
GitHub’ s API lets you request a wide range of information thr