ls.py wsgi.pyThe startproject  command ❶ tells Django to set up a new project
called ll_pr oject . The dot (.) at the end of the command creates the new
project with a directory structure that will make it easy to deploy the app to
a server when we’re finished developing it.
NOTE
Don’ t forget this dot, or you might run into some configuration
issues when you deploy the app. If you for get the dot, delete the files
and folders that wer e created (except ll_env ) and run the command
again.
Running the ls command ( dir  on Windows) ❷ shows that Django has
created a new directory called ll_pr oject . It also created a manage.py  file,
which is a short program that takes in commands and feeds them to the
relevant part of Django. We’ll use these commands to manage tasks, such as
working with databases and running servers.
The ll_pr oject  directory contains four files ❸; the most important are
settings.py , urls.py , and wsgi.py . The settings.py  file controls how Django
interacts with your system and manages your project. We’ll modify a few of
these settings and add some settings of our own as the project evolves. Theurls.py  file tells Django which pages to build in response to browser
requests. The wsgi.py  file helps Django serve the files it creates. The
filename is an acronym for “web server gateway interface.”
Creating the Database
Django stores most of the information for a project in a database, so next
we need to create a database that Django can work with. Enter the
following command (still in an active environment):
(ll_env)learning_log$ python manage.py migrate
❶ Operations to perform:
  Apply all migrations: admin, auth, contenttypes, se
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  --snip--
  Applying sessions.0001_initial... OK
❷ (ll_env)learning_log$ ls
db.sqlite3 ll_env ll_project manage.py
Anytime we modify a database, we say we’re migrating  the database.
Issuing the migrate  command for the first