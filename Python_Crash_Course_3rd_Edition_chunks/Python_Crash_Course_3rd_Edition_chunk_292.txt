  self.stats.reset_stats()
            --snip--
The flag button_clicked  stores a True  or False  value ❶, and the
game will restart only if Play is clicked and the game is not currently active
❷. To test this behavior , start a new game and repeatedly click where the
Play button should be. If everything works as expected, clicking the Play
button area should have no ef fect on the gameplay .
Hiding the Mouse Cursor
We want the mouse cursor to be visible when the game is inactive, but once
play begins, it just gets in the way . To fix this, we’ll make it invisible when
the game becomes active. We can do this at the end of the if block in
_check_play_button() :
alien_invasion.py    def _check_play_button(self, mouse_pos):
        """Start a new game when the player clicks Pl
        button_clicked = self.play_button.rect.collid
        if button_clicked and not self.game_active:
            --snip--
            # Hide the mouse cursor.
            pygame.mouse.set_visible(False)
Passing False  to set_visible()  tells Pygame to hide the cursor when
the mouse is over the game window .
We’ll make the cursor reappear once the game ends so the player can click
Play again to begin a new game. Here’ s the code to do that:
alien_invasion.py
    def _ship_hit(self):
        """Respond to ship being hit by alien."""
        if self.stats.ships_left > 0:
            --snip--
        else:
            self.game_active = False
            pygame.mouse.set_visible(True)We make the cursor visible again as soon as the game becomes inactive,
which happens in _ship_hit() . Attention to details like this makes your
game more professional looking and allows the player to focus on playing,
rather than figuring out the user interface.
TRY IT YOURSELF
14-1. Pr ess P  to Play:  Because Alien Invasion  uses keyboard input to control the ship, it would
be useful to start the game with a keypress. Add code that lets the player press P  to start. It might
help to move some code from _check_play