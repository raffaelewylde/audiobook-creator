 in a list, you
request the item at index 3.
The following asks for the bicycles at index 1 and index 3:
bicycles = ['trek', 'cannondale', 'redline', 'special
print(bicycles[1])
print(bicycles[3])
This code returns the second and fourth bicycles in the list:
cannondale
specialized
Python has a special syntax for accessing the last element in a list. If you
ask for the item at index -1, Python always returns the last item in the list:
bicycles = ['trek', 'cannondale', 'redline', 'special
print(bicycles[-1])This code returns the value 'specialized' . This syntax is quite useful,
because you’ll often want to access the last items in a list without knowing
exactly how long the list is. This convention extends to other negative index
values as well. The index -2 returns the second item from the end of the
list, the index -3 returns the third item from the end, and so forth.
Using Individual Values fr om a List
You can use individual values from a list just as you would any other
variable. For example, you can use f-strings to create a message based on a
value from a list.
Let’s try pulling the first bicycle from the list and composing a message
using that value:
bicycles = ['trek', 'cannondale', 'redline', 'special
message = f"My first bicycle was a {bicycles[0].title
print(message)
We build a sentence using the value at bicycles[0]  and assign it to the
variable message . The output is a simple sentence about the first bicycle
in the list:My first bicycle was a Trek.
TRY IT YOURSELF
Try these short programs to get some firsthand experience with Python’ s lists. You might want
to create a new folder for each chapter ’s exercises, to keep them or ganized.
3-1. Names:  Store the names of a few of your friends in a list called names . Print each
person’ s name by accessing each element in the list, one at a time.
3-2. Gr eetings:  Start with the list you used in Exercise 3-1, but instead of just printing each
person’ s name, print a message to them. The text of each message