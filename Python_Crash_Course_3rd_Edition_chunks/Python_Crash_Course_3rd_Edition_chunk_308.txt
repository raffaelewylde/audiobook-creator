in datasets. It’ s closely
associated with data analysis , which uses code to explore
the patterns and connections in a dataset. A dataset can be a
small list of numbers that fits in a single line of code, or it
can be terabytes of data that include many dif ferent kinds of
information.
Creating ef fective data visualizations is about more than just making
information look nice. When a representation of a dataset is simple and
visually appealing, its meaning becomes clear to viewers. People will see
patterns and significance in your datasets that they never knew existed.
Fortunately , you don’ t need a supercomputer to visualize complex data.
Python is so ef ficient that with just a laptop, you can quickly explore
datasets containing millions of individual data points. These data points
don’t have to be numbers; with the basics you learned in the first part of this
book, you can analyze non-numerical data as well.
People use Python for data-intensive work in genetics, climate research,
political and economic analysis, and much more. Data scientists havewritten an impressive array of visualization and analysis tools in Python,
many of which are available to you as well. One of the most popular tools is
Matplotlib, a mathematical plotting library . In this chapter , we’ll use
Matplotlib to make simple plots, such as line graphs and scatter plots. Then
we’ll create a more interesting dataset based on the concept of a random
walk—a visualization generated from a series of random decisions.
We’ll also use a package called Plotly , which creates visualizations that
work well on digital devices, to analyze the results of rolling dice. Plotly
generates visualizations that automatically resize to fit a variety of display
devices. These visualizations can also include a number of interactive
features, such as emphasizing particular aspects of the dataset when users
hover over dif ferent parts of the visualization. Learning to use Matplotlib
and Plotly will help you get starte