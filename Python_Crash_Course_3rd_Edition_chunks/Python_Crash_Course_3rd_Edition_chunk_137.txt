ve a specific value from a list.
The remove()  function worked because the value we were interested in
appeared only once in the list. But what if you want to remove all instances
of a value from a list?
Say you have a list of pets with the value 'cat'  repeated several times.
To remove all instances of that value, you can run a while  loop until
'cat'  is no longer in the list, as shown here:
pets.py
pets = ['dog', 'cat', 'dog', 'goldfish', 'cat', 'rabb
print(pets)
while 'cat' in pets:
    pets.remove('cat')print(pets)
We start with a list containing multiple instances of 'cat' . After printing
the list, Python enters the while  loop because it finds the value 'cat'
in the list at least once. Once inside the loop, Python removes the first
instance of 'cat' , returns to the while  line, and then reenters the loop
when it finds that 'cat'  is still in the list. It removes each instance of
'cat'  until the value is no longer in the list, at which point Python exits
the loop and prints the list again:
['dog', 'cat', 'dog', 'goldfish', 'cat', 'rabbit', 'c
['dog', 'dog', 'goldfish', 'rabbit']
Filling a Dictionary with User  Input
You can prompt for as much input as you need in each pass through a
while  loop. Let’ s make a polling program in which each pass through the
loop prompts for the participant’ s name and response. We’ll store the data
we gather in a dictionary , because we want to connect each response with a
particular user:
mountain_poll.pyresponses = {}
# Set a flag to indicate that polling is active.
polling_active = True
while polling_active:
    # Prompt for the person's name and response.
❶     name = input("\nWhat is your name? ")
    response = input("Which mountain would you like t
    # Store the response in the dictionary.
❷     responses[name] = response
    # Find out if anyone else is going to take the po
❸     repeat = input("Would you like to let another per
    if repeat == 'no':
        polling_active = False
# Polling is complete. Show the re