 add two attributes to the Topic  class: text  and date_added .The text  attribute is a CharField , a piece of data that’ s made up of
characters or text ❶. You use CharField  when you want to store a small
amount of text, such as a name, a title, or a city . When we define a
CharField  attribute, we have to tell Django how much space it should
reserve in the database. Here we give it a max_length  of 200
characters, which should be enough to hold most topic names.
The date_added  attribute is a DateTimeField , a piece of data that
will record a date and time ❷. We pass the ar gument
auto_now_add=True , which tells Django to automatically set this
attribute to the current date and time whenever the user creates a new topic.
It’s a good idea to tell Django how you want it to represent an instance of a
model. If a model has a __str__()  method, Django calls that method
whenever it needs to generate output referring to an instance of that model.
Here we’ve written a __str__()  method that returns the value assigned
to the text  attribute ❸.
To see the dif ferent kinds of fields you can use in a model, see the “Model
Field Reference” page at https://docs.djangopr oject.com/en/4.1/r ef/models/f
ields . You won’ t need all the information right now , but it will be extremely
useful when you’re developing your own Django projects.Activating Models
To use our models, we have to tell Django to include our app in the overall
project. Open settings.py  (in the ll_pr oject  directory); you’ll see a section
that tells Django which apps are installed in the project:
settings.py
--snip--
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]
--snip--
Add our app to this list by modifying INSTALLED_APPS  so it looks like
this:
--snip--
INSTALLED_APPS = [
    # My apps.
    'learning_logs',    # Default django apps.
    'django.contr