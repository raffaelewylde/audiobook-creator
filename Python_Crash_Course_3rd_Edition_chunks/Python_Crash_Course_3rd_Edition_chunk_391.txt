 will define the kind of
information that goes in the content  block.
A child template doesn’ t have to define every block from its parent, so you
can reserve space in parent templates for as many blocks as you like; the
child template uses only as many as it needs.
NOTE
In Python code, we almost always use four spaces when we indent.
Template files tend to have mor e levels of nesting than Python files,
so it’ s common to use only two spaces for each indentation level.The Child Template
Now we need to rewrite index.html  to inherit from base.html . Add the
following code to index.html :
index.html
❶ {% extends 'learning_logs/base.html' %}
❷ {% block content %}
  <p>Learning Log helps you keep track of your learni
  interested in.</p>
❸ {% endblock content %}
If you compare this to the original index.html , you can see that we’ve
replaced the Learning Log title with the code for inheriting from a parent
template ❶. A child template must have an {% extends %}  tag on the
first line to tell Django which parent template to inherit from. The file
base.html  is part of learning_logs , so we include learning_logs  in the
path to the parent template. This line pulls in everything contained in the
base.html  template and allows index.html  to define what goes in the space
reserved by the content  block.
We define the content block by inserting a {% block %}  tag with the
name content  ❷. Everything that we aren’ t inheriting from the parenttemplate goes inside the content  block. Here, that’ s the paragraph
describing the Learning Log project. We indicate that we’re finished
defining the content by using an {% endblock content %}  tag ❸. The
{% endblock %}  tag doesn’ t require a name, but if a template grows to
contain multiple blocks, it can be helpful to know exactly which block is
ending.
You can start to see the benefit of template inheritance: in a child template,
we only need to include content that’ s unique to that page. This not only
simplifies each template, but 