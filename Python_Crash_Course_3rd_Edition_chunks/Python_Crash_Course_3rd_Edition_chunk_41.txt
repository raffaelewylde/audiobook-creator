o a string, place the letter f immediately
before the opening quotation mark ❶. Put braces around the name or names
of any variable you want to use inside the string. Python will replace each
variable with its value when the string is displayed.
These strings are called f-strings . The f is for format , because Python
formats the string by replacing the name of any variable in braces with its
value. The output from the previous code is:
ada lovelaceYou can do a lot with f-strings. For example, you can use f-strings to
compose complete messages using the information associated with a
variable, as shown here:
first_name = "ada"
last_name = "lovelace"
full_name = f"{first_name} {last_name}"
❶ print(f"Hello, {full_name.title()}!")
The full name is used in a sentence that greets the user ❶, and the
title()  method changes the name to title case. This code returns a
simple but nicely formatted greeting:
Hello, Ada Lovelace!
You can also use f-strings to compose a message, and then assign the entire
message to a variable:
first_name = "ada"
last_name = "lovelace"
full_name = f"{first_name} {last_name}"
❶ message = f"Hello, {full_name.title()}!"
❷ print(message)This code displays the message Hello, Ada Lovelace!  as well, but by
assigning the message to a variable ❶ we make the final print()  call
much simpler ❷.
Adding Whitespace to Strings with Tabs or  Newlines
In programming, whitespace  refers to any nonprinting characters, such as
spaces, tabs, and end-of-line symbols. You can use whitespace to or ganize
your output so it’ s easier for users to read.
To add a tab to your text, use the character combination \t:
>>> print("Python")
Python
>>> print("\tPython")
    Python
To add a newline in a string, use the character combination \n:
>>> print("Languages:\nPython\nC\nJavaScript")
Languages:
Python
C
JavaScriptYou can also combine tabs and newlines in a single string. The string
"\n\t"  tells Python to move to a new line, and start the next line with a
tab. The following