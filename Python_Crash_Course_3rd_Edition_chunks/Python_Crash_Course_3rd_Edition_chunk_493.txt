I call, 355–357
 
GitHub API, 368
 
Hacker News API, 368–371
 processing an API response, 357–362
 
rate limits, 362
 
requesting data, 356–357
 
visualizing results, 362–368
 
arguments, 131. See also under  functions
 
as keyword, 151–152
 
assertions, 213, 217–218
 
attributes, 159. See also under  classes
 
B
 
banned_users.py , 76–77
 
bicycles.py , 34–35 
Boolean values, 77
 
Bootstrap, 433. See also unxder  Django
 
braces ({})
 
dictionaries, 92
 
sets, 104
 
break  statement, 121
 
built-in functions, 467
 
C
 
calls (functions), 130, 132–135
 
car.py, 162–178
 cars.py , 43–45, 72
 
cities.py , 121
 
classes
 
attributes, 159
 
accessing, 160
 
default values, 163–164
 
modifying, 164–166
 
creating, 158–161
 
importing, 173–179
 
multiple classes, 175–176
 
single classes, 174–175 
inheritance, 167–172
 
attributes and methods, 169
 
child classes, 167–170
 
composition, 170
 
__init__()  method, 167–169
 
instances as attributes, 170–172
 
overriding methods, 170
 
parent classes, 170
 
subclasses, 168
 
super()  function, 168
 superclasses, 168
 
instances, 157
 
methods, 159
 
calling, 160
 
chaining, 185
 
__init()__  method, 159
 
modeling real-world objects, 172–173
 
multiple instances, 161
 
naming conventions, 158
 
objects, 157
 
style guidelines, 181  
comma-separated value files. See CSV  files
 
comment.py , 29
 
comments, 29–30
 
conditional tests, 72–77. See also  if statements
 
confirmed_users.py , 124–125
 
constants, 28
 
continue  statement, 122
 
counting.py , 117–118, 122–123
 
CSV  files, 330–341
 
csv.reader()  function, 330–333
 error checking, 338–341
 
file headers, 330–332
 
D
 
data analysis, 301
 
databases. See under  Django
 
data visualization, 301. See also  Matplotlib; Plotly
 
datetime  module, 333–335
 
death_valley_highs_lows.py , 339–341
 
decorators, 221–223, 423–425
 
default values
 
class attributes, 163–164 
function parameters, 134–135
 
definition (functions), 130
 
def  keyword, 130
 
del  statement
 
with dic