 interesting projects.
TRY IT YOURSELF
2-12. Zen of Python:  Enter import this  into a Python terminal session and skim through
the additional principles.Summary
In this chapter you learned how to work with variables. You learned to use
descriptive variable names and resolve name errors and syntax errors when
they arise. You learned what strings are and how to display them using
lowercase, uppercase, and title case. You started using whitespace to
organize output neatly , and you learned how to remove unneeded elements
from a string. You started working with integers and floats, and you learned
some of the ways you can work with numerical data. You also learned to
write explanatory comments to make your code easier for you and others to
read. Finally , you read about the philosophy of keeping your code as simple
as possible, whenever possible.
In Chapter 3 , you’ll learn how to store collections of information in data
structures called lists. You’ll also learn how to work through a list,
manipulating any information in that list.3
INTRODUCING LISTS
In this chapter and the next you’ll learn what lists are and
how to start working with the elements in a list. Lists allow
you to store sets of information in one place, whether you
have just a few items or millions of items. Lists are one of
Python’ s most powerful features readily accessible to new
programmers, and they tie together many important concepts
in programming.
What Is a List?
A list is a collection of items in a particular order . You can make a list that
includes the letters of the alphabet, the digits from 0 to 9, or the names of
all the people in your family . You can put anything you want into a list, and
the items in your list don’ t have to be related in any particular way . Because
a list usually contains more than one element, it’ s a good idea to make the
name of your list plural, such as letters , digits , or names .
In Python, square brackets ( []) indicate a list, and individual elements in
the l