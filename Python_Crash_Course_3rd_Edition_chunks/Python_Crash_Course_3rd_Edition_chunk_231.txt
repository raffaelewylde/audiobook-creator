o everyone who participated in th
language_survey.show_results()
This program defines a question ( "What language did you first
learn to speak?" ) and creates an AnonymousSurvey  object with
that question. The program calls show_question()  to display the
question and then prompts for responses. Each response is stored as it is
received. When all responses have been entered (the user inputs q to quit),
show_results()  prints the survey results:
What language did you first learn to speak?
Enter 'q' at any time to quit.
Language: English
Language: Spanish
Language: English
Language: MandarinLanguage: q
Thank you to everyone who participated in the survey!
Survey results:
- English
- Spanish
- English
- Mandarin
This class works for a simple anonymous survey , but say we want to
improve AnonymousSurvey  and the module it’ s in, survey . We could
allow each user to enter more than one response, we could write a method
to list only unique responses and to report how many times each response
was given, or we could even write another class to manage non-anonymous
surveys.
Implementing such changes would risk af fecting the current behavior of the
class AnonymousSurvey . For example, it’ s possible that while trying to
allow each user to enter multiple responses, we could accidentally change
how single responses are handled. To ensure we don’ t break existing
behavior as we develop this module, we can write tests for the class.
Testing the AnonymousSurvey Class
Let’s write a test that verifies one aspect of the way AnonymousSurvey
behaves. We’ll write a test to verify that a single response to the surveyquestion is stored properly:
test_survey .py
from survey import AnonymousSurvey
❶ def test_store_single_response():
    """Test that a single response is stored properly
    question = "What language did you first learn to 
❷     language_survey = AnonymousSurvey(question)
    language_survey.store_response('English')
❸     assert 'English' in language_survey.responses
We st